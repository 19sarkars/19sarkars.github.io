{
  "hash": "7bfa8b7a82b915777048c33204986df0",
  "result": {
    "markdown": "---\ntitle: 'Probability Theory and Random Variables'\nauthor: 'Shivangi Sarkar'\ndate: '2023-11-10'\ncategories: ['Probability']\ndescription: 'An introduction to probability theory and random variables.'\nexecute: \n  message: false\n  warning: false\neditor_options: \n  chunk_output_type: console\n---\n\n# What is probability theory?\n\nProbability theory is something you may remember if you have taken combinatorics. As we know, probability refers to the chance of an event occurring. As for probability theory, it relies on probability distributions and random variables to determine the outcome of a situation.\n\n# What is an event?\n\nAn event is simply an outcome from an experiment. For example, if I went outside (this is the experiment), it could be raining, or it may be freezing cold, or hot and humid. All of these possibilities would be considered events that could result from going outside.\n\n# What are random variables?\n\nRandom variables are essentially variables that can take on multiple values (these are the possible outcomes from an experiment). Random variables play an important role in Probability Theory. \n\nAn easy example of this is the value of a six-sided die. We can define a random variable X, which represents the outcome of the roll. In this case, X could take on the following values: 1, 2, 3, 4, 5, 6.\n\n# How is probability theory applied in machine learning?\n\nProbability theory plays an important role in this field. Just as how we can use probability theory to make predictions on what will occur, it can be used by machine learning models to make predictions based on the data it is trained on. For example, in the field of ML, Bayesian inferences are directly tied to probability theory. They rely on prior knowledge and new data to make inferences.\n\n## Code Example\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n# Let's view an example of what a probability distribution plot looks like\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\n\n# Generate random data from a normal distribution\ndata = np.random.normal(loc=0, scale=1, size=1000)\n\n# Plot the histogram\nplt.hist(data, bins=30, density=True, alpha=0.5, color='b')\n\n# Plot the probability density function (PDF) of the normal distribution\nxmin, xmax = plt.xlim()\nx = np.linspace(xmin, xmax, 100)\np = norm.pdf(x, 0, 1)\nplt.plot(x, p, 'k', linewidth=2)\n\nplt.title('Normal Distribution and PDF')\nplt.xlabel('Value')\nplt.ylabel('Probability Density')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](post_files/figure-html/cell-2-output-1.png){width=597 height=449}\n:::\n:::\n\n\n",
    "supporting": [
      "post_files"
    ],
    "filters": [],
    "includes": {}
  }
}